@page "/profile"
@inject HttpClient httpClient
@using Kcd.UI.Models
@using Kcd.Common
@using System.IdentityModel.Tokens.Jwt
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationService
@inject HttpClient httpClient

<h3>Profile</h3>

@if (user != null)
{
    <p>Name: @user.Name</p>
    <p>Email: @user.Email</p>
    <p>Country: @user.Country</p>
    <p>Company: @user.Company</p>
    @if (!string.IsNullOrEmpty(avatarBase64))
    {
        <img src="data:@avatarContentType;base64,@avatarBase64" alt="Profile Picture" />
    }
}
else
{
    <p>Loading...</p>
}

@code {

    private UserProfile user;
    private string avatarBase64;
    private string avatarContentType = "image/png"; // Default to png

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationService.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(Constants.Uid_Claim_Type)?.Value;
        var email = authState.User.FindFirst(JwtRegisteredClaimNames.Email)?.Value;
        var name = authState.User.FindFirst(JwtRegisteredClaimNames.Name)?.Value;
        var country = authState.User.FindFirst(Constants.Country_Claim_Type)?.Value;
        var company = authState.User.FindFirst(Constants.Company_Claim_Type)?.Value;
        var avatarId = authState.User.FindFirst(Constants.Avatar_Id_Claim_Type)?.Value;
        user = new UserProfile()
        {
            Id = userId,
            Email = email,
            Name = name,
            Country = country,
            Company = company,
            AvatarId = avatarId
        };

        try
        {
            if (!string.IsNullOrEmpty(avatarId))
            {
                var response = await httpClient.GetAsync($"avatar/{avatarId}");
                response.EnsureSuccessStatusCode();

                var avatarBytes = await response.Content.ReadAsByteArrayAsync();
                avatarBase64 = Convert.ToBase64String(avatarBytes);

                // Get content type from response headers
                if (response.Content.Headers.ContentType != null)
                {
                    avatarContentType = response.Content.Headers.ContentType.ToString();
                }
            }
        }
        catch (Exception ex)
        {
            // Handle exceptions, e.g., show a default image or error message
            Console.WriteLine($"Failed to load avatar: {ex.Message}");
        }
    }
}